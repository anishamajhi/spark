# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class Location(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsLocation(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Location()
        x.Init(buf, n + offset)
        return x

    # Location
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Location
    def Latitude(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Location
    def Longitude(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Location
    def Location(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Location
    def LocationCaptureTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # Location
    def CellId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Location
    def UserId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Location
    def DeviceId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def LocationStart(builder): builder.StartObject(7)
def LocationAddLatitude(builder, latitude): builder.PrependFloat64Slot(0, latitude, 0.0)
def LocationAddLongitude(builder, longitude): builder.PrependFloat64Slot(1, longitude, 0.0)
def LocationAddLocation(builder, location): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(location), 0)
def LocationAddLocationCaptureTime(builder, locationCaptureTime): builder.PrependInt64Slot(3, locationCaptureTime, 0)
def LocationAddCellId(builder, cellId): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(cellId), 0)
def LocationAddUserId(builder, userId): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(userId), 0)
def LocationAddDeviceId(builder, deviceId): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(deviceId), 0)
def LocationEnd(builder): return builder.EndObject()
