# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class Sms(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsSms(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Sms()
        x.Init(buf, n + offset)
        return x

    # Sms
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Sms
    def SenderId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Sms
    def MessageBody(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Sms
    def SmsCreatedTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # Sms
    def Hash(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Sms
    def CellId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Sms
    def UserId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Sms
    def DeviceId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def SmsStart(builder): builder.StartObject(7)
def SmsAddSenderId(builder, senderId): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(senderId), 0)
def SmsAddMessageBody(builder, messageBody): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(messageBody), 0)
def SmsAddSmsCreatedTime(builder, smsCreatedTime): builder.PrependInt64Slot(2, smsCreatedTime, 0)
def SmsAddHash(builder, hash): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(hash), 0)
def SmsAddCellId(builder, cellId): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(cellId), 0)
def SmsAddUserId(builder, userId): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(userId), 0)
def SmsAddDeviceId(builder, deviceId): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(deviceId), 0)
def SmsEnd(builder): return builder.EndObject()
